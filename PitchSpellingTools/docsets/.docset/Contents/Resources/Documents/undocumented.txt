SpelledPitchDyad.swift
	public struct SpelledPitchDyad
PitchSpelling+Resolution.swift
	public enum Resolution: Float
DyadSpeller.swift
	public init(dyad: Dyad)
PitchSpelling.swift
	public init(
        _ letterName: LetterName,
        _ coarse: CoarseAdjustment = .natural,
        _ fine: FineAdjustment = .none
    )
	public var hashValue: Int { return "\(letterName),\(coarse),\(fine)".hashValue }
	public func == (lhs: PitchSpelling, rhs: PitchSpelling) -> Bool
IntervalQuality.swift
	public override class var members: [EnumKind] { return [Perfect, Augmented] }
	public override class func kind(
            coarseAdjustmentLower: PitchSpelling.CoarseAdjustment,
            _ coarseAdjustmentHigher: PitchSpelling.CoarseAdjustment
        ) -> EnumKind
	public override class var members: [EnumKind] { return [Minor, Major, Augmented] }
	public override class func kind(
            coarseAdjustmentLower: PitchSpelling.CoarseAdjustment,
            _ coarseAdjustmentHigher: PitchSpelling.CoarseAdjustment
        ) -> EnumKind
	public override class var members: [EnumKind]
	public override class func kind(
            coarseAdjustmentLower: PitchSpelling.CoarseAdjustment,
            _ coarseAdjustmentHigher: PitchSpelling.CoarseAdjustment
        ) -> EnumKind
	public override class var members: [EnumKind]
	public override class func kind(
            coarseAdjustmentLower: PitchSpelling.CoarseAdjustment,
            _ coarseAdjustmentHigher: PitchSpelling.CoarseAdjustment
        ) -> EnumKind
	public override class var members: [EnumKind]
	public override class func kind(
            coarseAdjustmentLower: PitchSpelling.CoarseAdjustment,
            _ coarseAdjustmentHigher: PitchSpelling.CoarseAdjustment
        ) -> EnumKind
	public override class var members: [EnumKind]
	public override class func kind(
            coarseAdjustmentLower: PitchSpelling.CoarseAdjustment,
            _ coarseAdjustmentHigher: PitchSpelling.CoarseAdjustment
        ) -> EnumKind
	public override class var members: [EnumKind]
	public override class func kind(
            coarseAdjustmentLower: PitchSpelling.CoarseAdjustment,
            _ coarseAdjustmentHigher: PitchSpelling.CoarseAdjustment
        ) -> EnumKind
	public class var members: [EnumKind] { return [] }
	public class var subFamilies: [EnumFamily.Type]
	public class func kind(
        coarseAdjustmentLower: PitchSpelling.CoarseAdjustment,
        _ coarseAdjustmentHigher: PitchSpelling.CoarseAdjustment
    ) -> EnumKind
	public static func intervalFamily(withAmountOfSteps steps: Int) -> EnumFamily.Type
	case DiminishedUnison = "d1"
	case PerfectUnison = "P1"
	case AugmentedUnison = "A1"
	case MinorSecond = "m2"
	case MajorSecond = "M2"
	case AugmentedSecond = "A2"
	case DiminishedThird = "d3"
	case MinorThird	= "m3"
	case MajorThird	= "M3"
	case AugmentedThird = "A3"
	case DiminishedFourth = "d4"
	case PerfectFourth = "P4"
	case AugmentedFourth = "A4"
	case DiminishedFifth = "d5"
	case PerfectFifth = "P5"
	case AugmentedFifth = "A5"
	case DiminishedSixth = "d6"
	case MinorSixth = "m6"
	case MajorSixth = "M6"
	case AugmentedSixth = "A6"
	case DiminishedSeventh = "d7"
	case MinorSeventh = "m7"
	case MajorSeventh = "M7"
	case AugmentedSeventh = "A7"
PitchSpelling+LetterName.swift
	public var steps: Int
MonadSpeller.swift
	public struct MonadSpeller: PitchSpeller
Pitch+PitchSpelling.swift
	public var pitchSpellings: [PitchSpelling]
	public var defaultPitchSpelling: PitchSpelling
