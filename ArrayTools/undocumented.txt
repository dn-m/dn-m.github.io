Equatable.swift
	public func == <T: SequenceType where T.Generator.Element: Equatable>(lhs: T, rhs: T) -> Bool
Comparable.swift
	public func stableSort(
        isOrderedBefore: (Generator.Element, Generator.Element) -> Bool
    ) -> [Generator.Element]
Stack.swift
	public func == <T>(lhs: Stack<T>, rhs: Stack<T>) -> Bool
AnySequenceType.swift
	public func == <T: AnySequenceType where T.Element: Equatable>(lhs: T, rhs: T) -> Bool
ListProcessing.swift
	public func + <T>(head: T, tail: [T]) -> [T]
	public func + <T>(list: [T], item: T) -> [T]
ElementsAtIndices.swift
	public func last(amount amount: Int) -> [Element]?
